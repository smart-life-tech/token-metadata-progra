{
    "sourceFile": "main.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 9,
            "patches": [
                {
                    "date": 1656150645416,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1656244462599,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,4 @@\n-// as used in https://www.youtube.com/watch?v=DQbt0-riooo\r\n-\r\n import * as mpl from \"@metaplex-foundation/mpl-token-metadata\";\r\n import * as web3 from \"@solana/web3.js\";\r\n import * as anchor from '@project-serum/anchor';\r\n \r\n@@ -9,20 +7,23 @@\n     const loaded = web3.Keypair.fromSecretKey(\r\n       new Uint8Array(JSON.parse(fs.readFileSync(keypairFile).toString())),\r\n     );\r\n     return loaded;\r\n-  }\r\n+  } \r\n \r\n-const INITIALIZE = false;\r\n+async function main(){\r\n \r\n-async function main(){\r\n-    console.log(\"let's name some tokens!\");\r\n+    console.log(\"AGXT TOKEN NAME AND LOGO\")\r\n     const myKeypair = loadWalletKey(\"86kwFA3vy3QTZp1DYiC21j4GDij1MvtG173UvDneqDvk.json\");\r\n+    console.log(myKeypair.publicKey.toBase58());\r\n     const mint = new web3.PublicKey(\"8U5f9781hWjUGhDoPfiVEGqsT36zNEPzVSaFHnM4JssR\");\r\n-    const seed1 = Buffer.from(anchor.utils.bytes.utf8.encode(\"metadata\"));\r\n+    const tokenMetadataProgram = mpl.PROGRAM_ID\r\n+    const seed1 = Buffer.from(anchor.utils.bytes.utf8.encode('metadata'));\r\n     const seed2 = Buffer.from(mpl.PROGRAM_ID.toBytes());\r\n-    const seed3 = Buffer.from(mint.toBytes());\r\n+    const seed3 = Buffer.from(mint.toBytes);\r\n+\r\n     const [metadataPDA, _bump] = web3.PublicKey.findProgramAddressSync([seed1, seed2, seed3], mpl.PROGRAM_ID);\r\n+   \r\n     const accounts = {\r\n         metadata: metadataPDA,\r\n         mint,\r\n         mintAuthority: myKeypair.publicKey,\r\n@@ -38,33 +39,19 @@\n         creators: null,\r\n         collection: null,\r\n         uses: null\r\n     }\r\n-    let ix;\r\n-    if (INITIALIZE) {\r\n-        const args =  {\r\n-            createMetadataAccountArgsV2: {\r\n-                data: dataV2,\r\n-                isMutable: true\r\n-            }\r\n-        };\r\n-        ix = mpl.createCreateMetadataAccountV2Instruction(accounts, args);\r\n-    } else {\r\n-        const args =  {\r\n-            updateMetadataAccountArgsV2: {\r\n-                data: dataV2,\r\n-                isMutable: true,\r\n-                updateAuthority: myKeypair.publicKey,\r\n-                primarySaleHappened: true\r\n-            }\r\n-        };\r\n-        ix = mpl.createUpdateMetadataAccountV2Instruction(accounts, args)\r\n-    }\r\n+    const args =  {\r\n+        createMetadataAccountArgsV2: {\r\n+            data: dataV2,\r\n+            isMutable: true\r\n+        }\r\n+    };\r\n+    const ix = mpl.createCreateMetadataAccountV2Instruction(accounts, args);\r\n     const tx = new web3.Transaction();\r\n     tx.add(ix);\r\n     const connection = new web3.Connection(\"https://api.mainnet-beta.solana.com\");\r\n     const txid = await web3.sendAndConfirmTransaction(connection, tx, [myKeypair]);\r\n     console.log(txid);\r\n-\r\n }\r\n \r\n-main();\r\n+main()\n\\ No newline at end of file\n"
                },
                {
                    "date": 1656245499549,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,8 @@\n     console.log(\"AGXT TOKEN NAME AND LOGO\")\r\n     const myKeypair = loadWalletKey(\"86kwFA3vy3QTZp1DYiC21j4GDij1MvtG173UvDneqDvk.json\");\r\n     console.log(myKeypair.publicKey.toBase58());\r\n     const mint = new web3.PublicKey(\"8U5f9781hWjUGhDoPfiVEGqsT36zNEPzVSaFHnM4JssR\");\r\n-    const tokenMetadataProgram = mpl.PROGRAM_ID\r\n     const seed1 = Buffer.from(anchor.utils.bytes.utf8.encode('metadata'));\r\n     const seed2 = Buffer.from(mpl.PROGRAM_ID.toBytes());\r\n     const seed3 = Buffer.from(mint.toBytes);\r\n \r\n"
                },
                {
                    "date": 1656245669349,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n     console.log(myKeypair.publicKey.toBase58());\r\n     const mint = new web3.PublicKey(\"8U5f9781hWjUGhDoPfiVEGqsT36zNEPzVSaFHnM4JssR\");\r\n     const seed1 = Buffer.from(anchor.utils.bytes.utf8.encode('metadata'));\r\n     const seed2 = Buffer.from(mpl.PROGRAM_ID.toBytes());\r\n-    const seed3 = Buffer.from(mint.toBytes);\r\n+    const seed3 = Buffer.from(mint.toBytes());\r\n \r\n     const [metadataPDA, _bump] = web3.PublicKey.findProgramAddressSync([seed1, seed2, seed3], mpl.PROGRAM_ID);\r\n    \r\n     const accounts = {\r\n"
                },
                {
                    "date": 1656246007650,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,6 @@\n+// as used in https://www.youtube.com/watch?v=DQbt0-riooo\r\n+\r\n import * as mpl from \"@metaplex-foundation/mpl-token-metadata\";\r\n import * as web3 from \"@solana/web3.js\";\r\n import * as anchor from '@project-serum/anchor';\r\n \r\n@@ -7,22 +9,20 @@\n     const loaded = web3.Keypair.fromSecretKey(\r\n       new Uint8Array(JSON.parse(fs.readFileSync(keypairFile).toString())),\r\n     );\r\n     return loaded;\r\n-  } \r\n+  }\r\n \r\n+const INITIALIZE = false;\r\n+\r\n async function main(){\r\n-\r\n-    console.log(\"AGXT TOKEN NAME AND LOGO\")\r\n+    console.log(\"let's name some tokens!\");\r\n     const myKeypair = loadWalletKey(\"86kwFA3vy3QTZp1DYiC21j4GDij1MvtG173UvDneqDvk.json\");\r\n-    console.log(myKeypair.publicKey.toBase58());\r\n     const mint = new web3.PublicKey(\"8U5f9781hWjUGhDoPfiVEGqsT36zNEPzVSaFHnM4JssR\");\r\n-    const seed1 = Buffer.from(anchor.utils.bytes.utf8.encode('metadata'));\r\n+    const seed1 = Buffer.from(anchor.utils.bytes.utf8.encode(\"metadata\"));\r\n     const seed2 = Buffer.from(mpl.PROGRAM_ID.toBytes());\r\n     const seed3 = Buffer.from(mint.toBytes());\r\n-\r\n     const [metadataPDA, _bump] = web3.PublicKey.findProgramAddressSync([seed1, seed2, seed3], mpl.PROGRAM_ID);\r\n-   \r\n     const accounts = {\r\n         metadata: metadataPDA,\r\n         mint,\r\n         mintAuthority: myKeypair.publicKey,\r\n@@ -38,19 +38,33 @@\n         creators: null,\r\n         collection: null,\r\n         uses: null\r\n     }\r\n-    const args =  {\r\n-        createMetadataAccountArgsV2: {\r\n-            data: dataV2,\r\n-            isMutable: true\r\n-        }\r\n-    };\r\n-    const ix = mpl.createCreateMetadataAccountV2Instruction(accounts, args);\r\n+    let ix;\r\n+    if (INITIALIZE) {\r\n+        const args =  {\r\n+            createMetadataAccountArgsV2: {\r\n+                data: dataV2,\r\n+                isMutable: true\r\n+            }\r\n+        };\r\n\\ No newline at end of file\n+        ix = mpl.createCreateMetadataAccountV2Instruction(accounts, args);\r\n+    } else {\r\n+        const args =  {\r\n+            updateMetadataAccountArgsV2: {\r\n+                data: dataV2,\r\n+                isMutable: true,\r\n+                updateAuthority: myKeypair.publicKey,\r\n+                primarySaleHappened: true\r\n+            }\r\n+        };\r\n+        ix = mpl.createUpdateMetadataAccountV2Instruction(accounts, args)\r\n+    }\r\n     const tx = new web3.Transaction();\r\n     tx.add(ix);\r\n     const connection = new web3.Connection(\"https://api.mainnet-beta.solana.com\");\r\n     const txid = await web3.sendAndConfirmTransaction(connection, tx, [myKeypair]);\r\n     console.log(txid);\r\n+\r\n }\r\n \r\n-main()\n+main();\r\n"
                },
                {
                    "date": 1656246321914,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,4 @@\n-// as used in https://www.youtube.com/watch?v=DQbt0-riooo\r\n-\r\n import * as mpl from \"@metaplex-foundation/mpl-token-metadata\";\r\n import * as web3 from \"@solana/web3.js\";\r\n import * as anchor from '@project-serum/anchor';\r\n \r\n@@ -9,20 +7,22 @@\n     const loaded = web3.Keypair.fromSecretKey(\r\n       new Uint8Array(JSON.parse(fs.readFileSync(keypairFile).toString())),\r\n     );\r\n     return loaded;\r\n-  }\r\n+  } \r\n \r\n-const INITIALIZE = false;\r\n+async function main(){\r\n \r\n-async function main(){\r\n-    console.log(\"let's name some tokens!\");\r\n+    console.log(\"AGXT TOKEN NAME AND LOGO\")\r\n     const myKeypair = loadWalletKey(\"86kwFA3vy3QTZp1DYiC21j4GDij1MvtG173UvDneqDvk.json\");\r\n+    console.log(myKeypair.publicKey.toBase58());\r\n     const mint = new web3.PublicKey(\"8U5f9781hWjUGhDoPfiVEGqsT36zNEPzVSaFHnM4JssR\");\r\n-    const seed1 = Buffer.from(anchor.utils.bytes.utf8.encode(\"metadata\"));\r\n+    const seed1 = Buffer.from(anchor.utils.bytes.utf8.encode('metadata'));\r\n     const seed2 = Buffer.from(mpl.PROGRAM_ID.toBytes());\r\n     const seed3 = Buffer.from(mint.toBytes());\r\n+\r\n     const [metadataPDA, _bump] = web3.PublicKey.findProgramAddressSync([seed1, seed2, seed3], mpl.PROGRAM_ID);\r\n+   \r\n     const accounts = {\r\n         metadata: metadataPDA,\r\n         mint,\r\n         mintAuthority: myKeypair.publicKey,\r\n@@ -38,33 +38,19 @@\n         creators: null,\r\n         collection: null,\r\n         uses: null\r\n     }\r\n-    let ix;\r\n-    if (INITIALIZE) {\r\n-        const args =  {\r\n-            createMetadataAccountArgsV2: {\r\n-                data: dataV2,\r\n-                isMutable: true\r\n-            }\r\n-        };\r\n-        ix = mpl.createCreateMetadataAccountV2Instruction(accounts, args);\r\n-    } else {\r\n-        const args =  {\r\n-            updateMetadataAccountArgsV2: {\r\n-                data: dataV2,\r\n-                isMutable: true,\r\n-                updateAuthority: myKeypair.publicKey,\r\n-                primarySaleHappened: true\r\n-            }\r\n-        };\r\n-        ix = mpl.createUpdateMetadataAccountV2Instruction(accounts, args)\r\n-    }\r\n+    const args =  {\r\n+        createMetadataAccountArgsV2: {\r\n+            data: dataV2,\r\n+            isMutable: true\r\n+        }\r\n+    };\r\n+    const ix = mpl.createCreateMetadataAccountV2Instruction(accounts, args);\r\n     const tx = new web3.Transaction();\r\n     tx.add(ix);\r\n\\ No newline at end of file\n     const connection = new web3.Connection(\"https://api.mainnet-beta.solana.com\");\r\n     const txid = await web3.sendAndConfirmTransaction(connection, tx, [myKeypair]);\r\n     console.log(txid);\r\n-\r\n }\r\n \r\n-main();\n+main()\n\\ No newline at end of file\n"
                },
                {
                    "date": 1656271102074,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n \r\n async function main(){\r\n \r\n     console.log(\"AGXT TOKEN NAME AND LOGO\")\r\n-    const myKeypair = loadWalletKey(\"86kwFA3vy3QTZp1DYiC21j4GDij1MvtG173UvDneqDvk.json\");\r\n+    const myKeypair = loadWalletKey(\"id.json\");\r\n     console.log(myKeypair.publicKey.toBase58());\r\n     const mint = new web3.PublicKey(\"8U5f9781hWjUGhDoPfiVEGqsT36zNEPzVSaFHnM4JssR\");\r\n     const seed1 = Buffer.from(anchor.utils.bytes.utf8.encode('metadata'));\r\n     const seed2 = Buffer.from(mpl.PROGRAM_ID.toBytes());\r\n@@ -52,5 +52,5 @@\n     const txid = await web3.sendAndConfirmTransaction(connection, tx, [myKeypair]);\r\n     console.log(txid);\r\n }\r\n \r\n-main()\n\\ No newline at end of file\n+main()\r\n"
                },
                {
                    "date": 1656407282802,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,9 +31,9 @@\n     }\r\n     const dataV2 = {\r\n         name: \"Agrichainx Tribe\",\r\n         symbol: \"AGXT\",\r\n-        uri: \"https://shdw-drive.genesysgo.net/Hpn6pxvLAjVW8btq13RLSitsFepfhxsxwVz2A1qCMZ4T/metadata.json\",\r\n+        uri: \"https://shdw-drive.genesysgo.net/Hpn6pxvLAjVW8btq13RLSitsFepfhxsxwVz2A1qCMZ4T/tokenmeta.json\",\r\n         // we don't need that\r\n         sellerFeeBasisPoints: 0,\r\n         creators: null,\r\n         collection: null,\r\n"
                },
                {
                    "date": 1656407477326,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,5 @@\n+\r\n import * as mpl from \"@metaplex-foundation/mpl-token-metadata\";\r\n import * as web3 from \"@solana/web3.js\";\r\n import * as anchor from '@project-serum/anchor';\r\n \r\n@@ -7,50 +8,62 @@\n     const loaded = web3.Keypair.fromSecretKey(\r\n       new Uint8Array(JSON.parse(fs.readFileSync(keypairFile).toString())),\r\n     );\r\n     return loaded;\r\n-  } \r\n+  }\r\n \r\n+const INITIALIZE = false;\r\n+\r\n async function main(){\r\n-\r\n-    console.log(\"AGXT TOKEN NAME AND LOGO\")\r\n+    console.log(\"let's name some tokens!\");\r\n     const myKeypair = loadWalletKey(\"id.json\");\r\n-    console.log(myKeypair.publicKey.toBase58());\r\n     const mint = new web3.PublicKey(\"8U5f9781hWjUGhDoPfiVEGqsT36zNEPzVSaFHnM4JssR\");\r\n-    const seed1 = Buffer.from(anchor.utils.bytes.utf8.encode('metadata'));\r\n+    const seed1 = Buffer.from(anchor.utils.bytes.utf8.encode(\"metadata\"));\r\n     const seed2 = Buffer.from(mpl.PROGRAM_ID.toBytes());\r\n     const seed3 = Buffer.from(mint.toBytes());\r\n-\r\n     const [metadataPDA, _bump] = web3.PublicKey.findProgramAddressSync([seed1, seed2, seed3], mpl.PROGRAM_ID);\r\n-   \r\n     const accounts = {\r\n         metadata: metadataPDA,\r\n         mint,\r\n         mintAuthority: myKeypair.publicKey,\r\n         payer: myKeypair.publicKey,\r\n         updateAuthority: myKeypair.publicKey,\r\n     }\r\n     const dataV2 = {\r\n-        name: \"Agrichainx Tribe\",\r\n-        symbol: \"AGXT\",\r\n-        uri: \"https://shdw-drive.genesysgo.net/Hpn6pxvLAjVW8btq13RLSitsFepfhxsxwVz2A1qCMZ4T/tokenmeta.json\",\r\n+        name: \"Fake USD Token\",\r\n+        symbol: \"FUD\",\r\n+        uri: \"https://shdw-drive.genesysgo.net/ArP7jjhVZsp7vkzteU7mpKA1fyHRhv4ZBz6gR7MJ1JTC/metadata.json\",\r\n         // we don't need that\r\n         sellerFeeBasisPoints: 0,\r\n         creators: null,\r\n         collection: null,\r\n         uses: null\r\n     }\r\n-    const args =  {\r\n-        createMetadataAccountArgsV2: {\r\n-            data: dataV2,\r\n-            isMutable: true\r\n-        }\r\n-    };\r\n-    const ix = mpl.createCreateMetadataAccountV2Instruction(accounts, args);\r\n+    let ix;\r\n+    if (INITIALIZE) {\r\n+        const args =  {\r\n+            createMetadataAccountArgsV2: {\r\n+                data: dataV2,\r\n+                isMutable: true\r\n+            }\r\n+        };\r\n+        ix = mpl.createCreateMetadataAccountV2Instruction(accounts, args);\r\n+    } else {\r\n+        const args =  {\r\n+            updateMetadataAccountArgsV2: {\r\n+                data: dataV2,\r\n+                isMutable: true,\r\n+                updateAuthority: myKeypair.publicKey,\r\n+                primarySaleHappened: true\r\n+            }\r\n+        };\r\n+        ix = mpl.createUpdateMetadataAccountV2Instruction(accounts, args)\r\n+    }\r\n     const tx = new web3.Transaction();\r\n     tx.add(ix);\r\n     const connection = new web3.Connection(\"https://api.mainnet-beta.solana.com\");\r\n     const txid = await web3.sendAndConfirmTransaction(connection, tx, [myKeypair]);\r\n     console.log(txid);\r\n+\r\n }\r\n \r\n-main()\r\n+main();\n\\ No newline at end of file\n"
                },
                {
                    "date": 1656407519808,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,11 +28,11 @@\n         payer: myKeypair.publicKey,\r\n         updateAuthority: myKeypair.publicKey,\r\n     }\r\n     const dataV2 = {\r\n-        name: \"Fake USD Token\",\r\n-        symbol: \"FUD\",\r\n-        uri: \"https://shdw-drive.genesysgo.net/ArP7jjhVZsp7vkzteU7mpKA1fyHRhv4ZBz6gR7MJ1JTC/metadata.json\",\r\n+        name: \"Agrichainx Tribe\",\r\n+        symbol: \"AGXT\",\r\n+        uri: \"https://shdw-drive.genesysgo.net/Hpn6pxvLAjVW8btq13RLSitsFepfhxsxwVz2A1qCMZ4T/tokenmeta.json\",\r\n         // we don't need that\r\n         sellerFeeBasisPoints: 0,\r\n         creators: null,\r\n         collection: null,\r\n"
                }
            ],
            "date": 1656150645416,
            "name": "Commit-0",
            "content": "// as used in https://www.youtube.com/watch?v=DQbt0-riooo\r\n\r\nimport * as mpl from \"@metaplex-foundation/mpl-token-metadata\";\r\nimport * as web3 from \"@solana/web3.js\";\r\nimport * as anchor from '@project-serum/anchor';\r\n\r\nexport function loadWalletKey(keypairFile:string): web3.Keypair {\r\n    const fs = require(\"fs\");\r\n    const loaded = web3.Keypair.fromSecretKey(\r\n      new Uint8Array(JSON.parse(fs.readFileSync(keypairFile).toString())),\r\n    );\r\n    return loaded;\r\n  }\r\n\r\nconst INITIALIZE = false;\r\n\r\nasync function main(){\r\n    console.log(\"let's name some tokens!\");\r\n    const myKeypair = loadWalletKey(\"86kwFA3vy3QTZp1DYiC21j4GDij1MvtG173UvDneqDvk.json\");\r\n    const mint = new web3.PublicKey(\"8U5f9781hWjUGhDoPfiVEGqsT36zNEPzVSaFHnM4JssR\");\r\n    const seed1 = Buffer.from(anchor.utils.bytes.utf8.encode(\"metadata\"));\r\n    const seed2 = Buffer.from(mpl.PROGRAM_ID.toBytes());\r\n    const seed3 = Buffer.from(mint.toBytes());\r\n    const [metadataPDA, _bump] = web3.PublicKey.findProgramAddressSync([seed1, seed2, seed3], mpl.PROGRAM_ID);\r\n    const accounts = {\r\n        metadata: metadataPDA,\r\n        mint,\r\n        mintAuthority: myKeypair.publicKey,\r\n        payer: myKeypair.publicKey,\r\n        updateAuthority: myKeypair.publicKey,\r\n    }\r\n    const dataV2 = {\r\n        name: \"Agrichainx Tribe\",\r\n        symbol: \"AGXT\",\r\n        uri: \"https://shdw-drive.genesysgo.net/Hpn6pxvLAjVW8btq13RLSitsFepfhxsxwVz2A1qCMZ4T/metadata.json\",\r\n        // we don't need that\r\n        sellerFeeBasisPoints: 0,\r\n        creators: null,\r\n        collection: null,\r\n        uses: null\r\n    }\r\n    let ix;\r\n    if (INITIALIZE) {\r\n        const args =  {\r\n            createMetadataAccountArgsV2: {\r\n                data: dataV2,\r\n                isMutable: true\r\n            }\r\n        };\r\n        ix = mpl.createCreateMetadataAccountV2Instruction(accounts, args);\r\n    } else {\r\n        const args =  {\r\n            updateMetadataAccountArgsV2: {\r\n                data: dataV2,\r\n                isMutable: true,\r\n                updateAuthority: myKeypair.publicKey,\r\n                primarySaleHappened: true\r\n            }\r\n        };\r\n        ix = mpl.createUpdateMetadataAccountV2Instruction(accounts, args)\r\n    }\r\n    const tx = new web3.Transaction();\r\n    tx.add(ix);\r\n    const connection = new web3.Connection(\"https://api.mainnet-beta.solana.com\");\r\n    const txid = await web3.sendAndConfirmTransaction(connection, tx, [myKeypair]);\r\n    console.log(txid);\r\n\r\n}\r\n\r\nmain();\r\n"
        }
    ]
}